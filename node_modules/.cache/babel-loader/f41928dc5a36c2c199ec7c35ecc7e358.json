{"ast":null,"code":"import { LOAD_TWISTER_SUCCESS, LOAD_TWISTER_ERROR, LOAD_TWISTER_TWISTS_SUCCESS, LOAD_TWISTER_TWISTS_ERROR } from \"./actionTypes\"; // GET TWISTER DATA AND TWISTS LIST ACTION CREATOR\n\nexport const getTwisterData = twisterUsername => async dispatch => {\n  try {\n    // 1. Get user data\n    fetch(\"http://localhost:8081/api/users/search-twister/\".concat(twisterUsername)).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(twisterData => {\n      // 2. If twister exist, get his twists list\n      if (twisterData.status === 200) {\n        dispatch({\n          type: LOAD_TWISTER_SUCCESS,\n          payload: twisterData.foundTwister\n        });\n        fetch(\"http://localhost:8081/api/twists/\".concat(twisterData.foundTwister.firebaseId)).then(res => {\n          if (res.ok) {\n            return res.json();\n          }\n        }).then(twisterTwistsList => {\n          dispatch({\n            type: LOAD_TWISTER_TWISTS_SUCCESS,\n            payload: twisterTwistsList\n          });\n        }).catch(err => {\n          dispatch({\n            type: LOAD_TWISTER_TWISTS_ERROR,\n            payload: \"Sorry, we could not load this twister twists.\"\n          });\n        });\n      } else {\n        // 3. else, if twister was not found, dispatch error message\n        dispatch({\n          type: LOAD_TWISTER_ERROR,\n          payload: \"Sorry, we didn't find this twister.\"\n        });\n      }\n    }).catch(err => {\n      dispatch({\n        type: LOAD_TWISTER_ERROR,\n        payload: \"Sorry, we didn't find this twister.\"\n      });\n    });\n  } catch (err) {\n    dispatch({\n      type: LOAD_TWISTER_ERROR,\n      payload: \"Sorry, we didn't find this twister.\"\n    });\n  }\n}; // // GET TWISTER TWIST LIST ACTION CREATOR\n// export const getTwisterTwistsList = twisterFbId => async dispatch => {\n//   try {\n//     // 1. Get user twists list\n//     fetch(`http://localhost:8081/api/twists/${twisterFbId}`)\n//       .then(res => {\n//         if (res.ok) {\n//           return res.json();\n//         }\n//       })\n//       .then(data => {\n//         console.log(\"data\");\n//         console.log(data);\n//         dispatch({\n//           type: LOAD_TWISTER_TWISTS_SUCCESS,\n//           payload: data\n//         });\n//       })\n//       .catch(err => {\n//         dispatch({\n//           type: LOAD_TWISTER_TWISTS_ERROR,\n//           payload: \"Sorry, we could not load this twister twists.\"\n//         });\n//       });\n//   } catch (err) {\n//     dispatch({\n//       type: LOAD_TWISTER_TWISTS_ERROR,\n//       payload: \"Sorry, we could not load this twister twists.\"\n//     });\n//   }\n// };","map":{"version":3,"sources":["/Users/victorarminjon/twister-frontend/src/redux/actions/twister.js"],"names":["LOAD_TWISTER_SUCCESS","LOAD_TWISTER_ERROR","LOAD_TWISTER_TWISTS_SUCCESS","LOAD_TWISTER_TWISTS_ERROR","getTwisterData","twisterUsername","dispatch","fetch","then","res","ok","json","twisterData","status","type","payload","foundTwister","firebaseId","twisterTwistsList","catch","err"],"mappings":"AAAA,SACEA,oBADF,EAEEC,kBAFF,EAGEC,2BAHF,EAIEC,yBAJF,QAKO,eALP,C,CAOA;;AACA,OAAO,MAAMC,cAAc,GAAGC,eAAe,IAAI,MAAMC,QAAN,IAAkB;AACjE,MAAI;AACF;AACAC,IAAAA,KAAK,0DAAmDF,eAAnD,EAAL,CACGG,IADH,CACQC,GAAG,IAAI;AACX,UAAIA,GAAG,CAACC,EAAR,EAAY;AACV,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;AACF,KALH,EAMGH,IANH,CAMQI,WAAW,IAAI;AACnB;AACA,UAAIA,WAAW,CAACC,MAAZ,KAAuB,GAA3B,EAAgC;AAC9BP,QAAAA,QAAQ,CAAC;AACPQ,UAAAA,IAAI,EAAEd,oBADC;AAEPe,UAAAA,OAAO,EAAEH,WAAW,CAACI;AAFd,SAAD,CAAR;AAIAT,QAAAA,KAAK,4CAAqCK,WAAW,CAACI,YAAZ,CAAyBC,UAA9D,EAAL,CACCT,IADD,CACMC,GAAG,IAAI;AACX,cAAIA,GAAG,CAACC,EAAR,EAAY;AACV,mBAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;AACF,SALD,EAMCH,IAND,CAMMU,iBAAiB,IAAI;AACzBZ,UAAAA,QAAQ,CAAC;AACPQ,YAAAA,IAAI,EAAEZ,2BADC;AAEPa,YAAAA,OAAO,EAAEG;AAFF,WAAD,CAAR;AAID,SAXD,EAYCC,KAZD,CAYOC,GAAG,IAAI;AACZd,UAAAA,QAAQ,CAAC;AACPQ,YAAAA,IAAI,EAAEX,yBADC;AAEPY,YAAAA,OAAO,EAAE;AAFF,WAAD,CAAR;AAID,SAjBD;AAkBD,OAvBD,MAuBO;AACL;AACAT,QAAAA,QAAQ,CAAC;AACPQ,UAAAA,IAAI,EAAEb,kBADC;AAEPc,UAAAA,OAAO,EAAE;AAFF,SAAD,CAAR;AAID;AACF,KAtCH,EAuCGI,KAvCH,CAuCSC,GAAG,IAAI;AACZd,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAEb,kBADC;AAEPc,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAID,KA5CH;AA6CD,GA/CD,CA+CE,OAAOK,GAAP,EAAY;AACZd,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEb,kBADC;AAEPc,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID;AACF,CAtDM,C,CAwDP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {\n  LOAD_TWISTER_SUCCESS,\n  LOAD_TWISTER_ERROR,\n  LOAD_TWISTER_TWISTS_SUCCESS,\n  LOAD_TWISTER_TWISTS_ERROR,\n} from \"./actionTypes\";\n\n// GET TWISTER DATA AND TWISTS LIST ACTION CREATOR\nexport const getTwisterData = twisterUsername => async dispatch => {\n  try {\n    // 1. Get user data\n    fetch(`http://localhost:8081/api/users/search-twister/${twisterUsername}`)\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n      })\n      .then(twisterData => {\n        // 2. If twister exist, get his twists list\n        if (twisterData.status === 200) {\n          dispatch({\n            type: LOAD_TWISTER_SUCCESS,\n            payload: twisterData.foundTwister\n          });\n          fetch(`http://localhost:8081/api/twists/${twisterData.foundTwister.firebaseId}`)\n          .then(res => {\n            if (res.ok) {\n              return res.json();\n            }\n          })\n          .then(twisterTwistsList => {\n            dispatch({\n              type: LOAD_TWISTER_TWISTS_SUCCESS,\n              payload: twisterTwistsList\n            });\n          })\n          .catch(err => {\n            dispatch({\n              type: LOAD_TWISTER_TWISTS_ERROR,\n              payload: \"Sorry, we could not load this twister twists.\"\n            });\n          });\n        } else {\n          // 3. else, if twister was not found, dispatch error message\n          dispatch({\n            type: LOAD_TWISTER_ERROR,\n            payload: \"Sorry, we didn't find this twister.\"\n          });\n        }\n      })\n      .catch(err => {\n        dispatch({\n          type: LOAD_TWISTER_ERROR,\n          payload: \"Sorry, we didn't find this twister.\"\n        });\n      });\n  } catch (err) {\n    dispatch({\n      type: LOAD_TWISTER_ERROR,\n      payload: \"Sorry, we didn't find this twister.\"\n    });\n  }\n};\n\n// // GET TWISTER TWIST LIST ACTION CREATOR\n// export const getTwisterTwistsList = twisterFbId => async dispatch => {\n//   try {\n//     // 1. Get user twists list\n//     fetch(`http://localhost:8081/api/twists/${twisterFbId}`)\n//       .then(res => {\n//         if (res.ok) {\n//           return res.json();\n//         }\n//       })\n//       .then(data => {\n//         console.log(\"data\");\n//         console.log(data);\n//         dispatch({\n//           type: LOAD_TWISTER_TWISTS_SUCCESS,\n//           payload: data\n//         });\n//       })\n//       .catch(err => {\n//         dispatch({\n//           type: LOAD_TWISTER_TWISTS_ERROR,\n//           payload: \"Sorry, we could not load this twister twists.\"\n//         });\n//       });\n//   } catch (err) {\n//     dispatch({\n//       type: LOAD_TWISTER_TWISTS_ERROR,\n//       payload: \"Sorry, we could not load this twister twists.\"\n//     });\n//   }\n// };\n"]},"metadata":{},"sourceType":"module"}