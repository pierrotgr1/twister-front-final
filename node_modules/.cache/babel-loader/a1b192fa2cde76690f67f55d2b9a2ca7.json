{"ast":null,"code":"import { LOAD_TWISTS_SUCCESS, LOAD_TWISTS_ERROR, LOAD_OWN_TWISTS_SUCCESS, LOAD_OWN_TWISTS_ERROR, LIKE_ONE_TWIST_SUCCESS, LIKE_ONE_TWIST_ERROR, UNLIKE_ONE_TWIST_SUCCESS, UNLIKE_ONE_TWIST_ERROR } from \"../actions/actionTypes\"; // GET CURRENT USER TWISTS LIST ACTION CREATOR\n\nexport const getUserTwistsList = currentUserFbId => async dispatch => {\n  try {\n    // 1. Get user twists list\n    fetch(\"http://localhost:8081/api/twists/\".concat(currentUserFbId, \"/get-all-twists\")).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(data => {\n      dispatch({\n        type: LOAD_TWISTS_SUCCESS,\n        payload: data.ownAndFollowingsTwistsArr\n      });\n    }).catch(err => {\n      dispatch({\n        type: LOAD_TWISTS_ERROR,\n        payload: \"Sorry, we could not load twists.\"\n      });\n    });\n  } catch (err) {\n    dispatch({\n      type: LOAD_TWISTS_ERROR,\n      payload: \"Sorry, we could not load twists.\"\n    });\n  }\n}; // GET CURRENT USER OWN TWISTS LIST ACTION CREATOR\n\nexport const getUserOwnTwistsList = currentUserFbId => async dispatch => {\n  try {\n    // 1. Get user twists list\n    fetch(\"http://localhost:8081/api/twists/\".concat(currentUserFbId)).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(data => {\n      dispatch({\n        type: LOAD_OWN_TWISTS_SUCCESS,\n        payload: data\n      });\n    }).catch(err => {\n      dispatch({\n        type: LOAD_OWN_TWISTS_ERROR,\n        payload: \"Sorry, we could not load your twists.\"\n      });\n    });\n  } catch (err) {\n    dispatch({\n      type: LOAD_OWN_TWISTS_ERROR,\n      payload: \"Sorry, we could not load your twists.\"\n    });\n  }\n}; // Like one Twist action creator\n\nexport const likeOneTwist = (twist_id, currentUserFbId) => async dispatch => {\n  try {\n    console.log(\"inside like action\");\n    fetch(\"http://localhost:8081/api/twists/\".concat(twist_id, \"/like\"), {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        currentUserFbId\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(data => {\n      dispatch({\n        type: LIKE_ONE_TWIST_SUCCESS,\n        payload: data.updatedLikedTwist\n      }); // trash solution that reloads the page automatically\n\n      window.location.reload();\n    }).catch(err => {\n      dispatch({\n        type: LIKE_ONE_TWIST_ERROR,\n        payload: \"Sorry, we could not like this twists seems like you already liked it.\"\n      });\n    });\n  } catch (err) {}\n}; // UnLike one Twist action creator\n\nexport const unlikeOneTwist = (twist_id, currentUserFbId) => async dispatch => {\n  try {\n    console.log(\"inside unlike action\");\n    fetch(\"http://localhost:8081/api/twists/\".concat(twist_id, \"/unlike\"), {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        currentUserFbId\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(data => {\n      dispatch({\n        type: UNLIKE_ONE_TWIST_SUCCESS,\n        payload: data.updatedUnlikedLikedTwist\n      });\n    }).catch(err => {\n      dispatch({\n        type: UNLIKE_ONE_TWIST_ERROR,\n        payload: \"Sorry, we could not load your twists.\"\n      });\n    });\n  } catch (err) {}\n};","map":{"version":3,"sources":["/Users/victorarminjon/twister-frontend/src/redux/actions/twist.js"],"names":["LOAD_TWISTS_SUCCESS","LOAD_TWISTS_ERROR","LOAD_OWN_TWISTS_SUCCESS","LOAD_OWN_TWISTS_ERROR","LIKE_ONE_TWIST_SUCCESS","LIKE_ONE_TWIST_ERROR","UNLIKE_ONE_TWIST_SUCCESS","UNLIKE_ONE_TWIST_ERROR","getUserTwistsList","currentUserFbId","dispatch","fetch","then","res","ok","json","data","type","payload","ownAndFollowingsTwistsArr","catch","err","getUserOwnTwistsList","likeOneTwist","twist_id","console","log","method","headers","body","JSON","stringify","updatedLikedTwist","window","location","reload","unlikeOneTwist","updatedUnlikedLikedTwist"],"mappings":"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","sourcesContent":["import {\n  LOAD_TWISTS_SUCCESS,\n  LOAD_TWISTS_ERROR,\n  LOAD_OWN_TWISTS_SUCCESS,\n  LOAD_OWN_TWISTS_ERROR,\n  LIKE_ONE_TWIST_SUCCESS,\n  LIKE_ONE_TWIST_ERROR,\n  UNLIKE_ONE_TWIST_SUCCESS,\n  UNLIKE_ONE_TWIST_ERROR\n} from \"../actions/actionTypes\";\n\n// GET CURRENT USER TWISTS LIST ACTION CREATOR\nexport const getUserTwistsList = currentUserFbId => async dispatch => {\n  try {\n    // 1. Get user twists list\n    fetch(`http://localhost:8081/api/twists/${currentUserFbId}/get-all-twists`)\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n      })\n      .then(data => {\n        dispatch({\n          type: LOAD_TWISTS_SUCCESS,\n          payload: data.ownAndFollowingsTwistsArr\n        });\n      })\n      .catch(err => {\n        dispatch({\n          type: LOAD_TWISTS_ERROR,\n          payload: \"Sorry, we could not load twists.\"\n        });\n      });\n  } catch (err) {\n    dispatch({\n      type: LOAD_TWISTS_ERROR,\n      payload: \"Sorry, we could not load twists.\"\n    });\n  }\n};\n\n// GET CURRENT USER OWN TWISTS LIST ACTION CREATOR\nexport const getUserOwnTwistsList = currentUserFbId => async dispatch => {\n  try {\n    // 1. Get user twists list\n    fetch(`http://localhost:8081/api/twists/${currentUserFbId}`)\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n      })\n      .then(data => {\n        dispatch({\n          type: LOAD_OWN_TWISTS_SUCCESS,\n          payload: data\n        });\n      })\n      .catch(err => {\n        dispatch({\n          type: LOAD_OWN_TWISTS_ERROR,\n          payload: \"Sorry, we could not load your twists.\"\n        });\n      });\n  } catch (err) {\n    dispatch({\n      type: LOAD_OWN_TWISTS_ERROR,\n      payload: \"Sorry, we could not load your twists.\"\n    });\n  }\n};\n\n// Like one Twist action creator\nexport const likeOneTwist = (twist_id, currentUserFbId) => async dispatch => {\n  try {\n    console.log(\"inside like action\");\n    fetch(`http://localhost:8081/api/twists/${twist_id}/like`, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ currentUserFbId })\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n      })\n      .then(data => {\n        dispatch({\n          type: LIKE_ONE_TWIST_SUCCESS,\n          payload: data.updatedLikedTwist\n        });\n        // trash solution that reloads the page automatically\n        window.location.reload();\n      })\n      .catch(err => {\n        dispatch({\n          type: LIKE_ONE_TWIST_ERROR,\n          payload:\n            \"Sorry, we could not like this twists seems like you already liked it.\"\n        });\n      });\n  } catch (err) {}\n};\n\n// UnLike one Twist action creator\nexport const unlikeOneTwist = (twist_id, currentUserFbId) => async dispatch => {\n  try {\n    console.log(\"inside unlike action\");\n    fetch(`http://localhost:8081/api/twists/${twist_id}/unlike`, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ currentUserFbId })\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n      })\n      .then(data => {\n        dispatch({\n          type: UNLIKE_ONE_TWIST_SUCCESS,\n          payload: data.updatedUnlikedLikedTwist\n        });\n      })\n      .catch(err => {\n        dispatch({\n          type: UNLIKE_ONE_TWIST_ERROR,\n          payload: \"Sorry, we could not load your twists.\"\n        });\n      });\n  } catch (err) {}\n};\n"]},"metadata":{},"sourceType":"module"}