{"ast":null,"code":"import { LOAD_USER_SUCCESS, LOAD_USER_ERROR, FOLLOW_SUCCESS, FOLLOW_ERROR, UNFOLLOW_SUCCESS, UNFOLLOW_ERROR } from \"./actionTypes\"; // GET USER DATA ACTION CREATOR\n\nexport const getUserData = currentUserFbId => async dispatch => {\n  try {\n    // 1. Get user data\n    fetch(\"http://localhost:8081/api/users/\".concat(currentUserFbId)).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(data => {\n      dispatch({\n        type: LOAD_USER_SUCCESS,\n        payload: data.userToFind\n      });\n    }).catch(err => {\n      dispatch({\n        type: LOAD_USER_ERROR,\n        payload: \"Sorry, we could not load your info.\"\n      });\n    });\n  } catch (err) {\n    dispatch({\n      type: LOAD_USER_ERROR,\n      payload: \"Sorry, we could not load your info.\"\n    });\n  }\n}; // FOLLOW ONE TWISTER ACTION CREATOR\n\nexport const follow = (currentUserFbId, twisterToFollowFbId) => async dispatch => {\n  try {\n    fetch(\"http://localhost:8081/api/users/\".concat(currentUserFbId, \"/add-following\"), {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        twisterToFollowFbId\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(data => {\n      if (data.isNewFollow) {\n        dispatch({\n          type: FOLLOW_SUCCESS,\n          payload: data.updatedCurrentUser\n        });\n      } else {\n        dispatch({\n          type: FOLLOW_ERROR,\n          payload: data.message\n        });\n      }\n    }).catch(err => {\n      dispatch({\n        type: FOLLOW_ERROR,\n        payload: \"Sorry, there was a problem, we could not add this following.\"\n      });\n    });\n  } catch (err) {\n    dispatch({\n      type: FOLLOW_ERROR,\n      payload: \"Sorry, there was a problem, we could not add this following.\"\n    });\n  }\n}; // UNFOLLOW ONE TWISTER ACTION CREATOR\n\nexport const unfollow = (currentUserFbId, twisterToUnfollowFbId) => async dispatch => {\n  try {\n    fetch(\"http://localhost:8081/api/users/\".concat(currentUserFbId, \"/delete-following\"), {\n      method: \"delete\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        twisterToUnfollowFbId\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(data => {\n      dispatch({\n        type: UNFOLLOW_SUCCESS,\n        payload: data.updatedCurrentUser\n      });\n    }).catch(err => {\n      dispatch({\n        type: UNFOLLOW_ERROR,\n        payload: \"Sorry, there was a problem, we could not delete this following.\"\n      });\n    });\n  } catch (err) {\n    dispatch({\n      type: UNFOLLOW_ERROR,\n      payload: \"Sorry, there was a problem, we could not delete this following.\"\n    });\n  }\n};","map":{"version":3,"sources":["/Users/victorarminjon/twister-frontend/src/redux/actions/user.js"],"names":["LOAD_USER_SUCCESS","LOAD_USER_ERROR","FOLLOW_SUCCESS","FOLLOW_ERROR","UNFOLLOW_SUCCESS","UNFOLLOW_ERROR","getUserData","currentUserFbId","dispatch","fetch","then","res","ok","json","data","type","payload","userToFind","catch","err","follow","twisterToFollowFbId","method","headers","body","JSON","stringify","isNewFollow","updatedCurrentUser","message","unfollow","twisterToUnfollowFbId"],"mappings":"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","sourcesContent":["import {\n  LOAD_USER_SUCCESS,\n  LOAD_USER_ERROR,\n  FOLLOW_SUCCESS,\n  FOLLOW_ERROR,\n  UNFOLLOW_SUCCESS,\n  UNFOLLOW_ERROR\n} from \"./actionTypes\";\n\n// GET USER DATA ACTION CREATOR\nexport const getUserData = currentUserFbId => async dispatch => {\n  try {\n    // 1. Get user data\n    fetch(`http://localhost:8081/api/users/${currentUserFbId}`)\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n      })\n      .then(data => {\n        dispatch({\n          type: LOAD_USER_SUCCESS,\n          payload: data.userToFind\n        });\n      })\n      .catch(err => {\n        dispatch({\n          type: LOAD_USER_ERROR,\n          payload: \"Sorry, we could not load your info.\"\n        });\n      });\n  } catch (err) {\n    dispatch({\n      type: LOAD_USER_ERROR,\n      payload: \"Sorry, we could not load your info.\"\n    });\n  }\n};\n\n// FOLLOW ONE TWISTER ACTION CREATOR\nexport const follow = (\n  currentUserFbId,\n  twisterToFollowFbId\n) => async dispatch => {\n  try {\n    fetch(`http://localhost:8081/api/users/${currentUserFbId}/add-following`, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ twisterToFollowFbId })\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n      })\n      .then(data => {\n        if (data.isNewFollow) {\n          dispatch({\n            type: FOLLOW_SUCCESS,\n            payload: data.updatedCurrentUser\n          });\n        } else {\n          dispatch({\n            type: FOLLOW_ERROR,\n            payload: data.message\n          });\n        }\n      })\n      .catch(err => {\n        dispatch({\n          type: FOLLOW_ERROR,\n          payload:\n            \"Sorry, there was a problem, we could not add this following.\"\n        });\n      });\n  } catch (err) {\n    dispatch({\n      type: FOLLOW_ERROR,\n      payload: \"Sorry, there was a problem, we could not add this following.\"\n    });\n  }\n};\n\n// UNFOLLOW ONE TWISTER ACTION CREATOR\nexport const unfollow = (\n  currentUserFbId,\n  twisterToUnfollowFbId\n) => async dispatch => {\n  try {\n    fetch(\n      `http://localhost:8081/api/users/${currentUserFbId}/delete-following`,\n      {\n        method: \"delete\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ twisterToUnfollowFbId })\n      }\n    )\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n      })\n      .then(data => {\n        dispatch({\n          type: UNFOLLOW_SUCCESS,\n          payload: data.updatedCurrentUser\n        });\n      })\n      .catch(err => {\n        dispatch({\n          type: UNFOLLOW_ERROR,\n          payload:\n            \"Sorry, there was a problem, we could not delete this following.\"\n        });\n      });\n  } catch (err) {\n    dispatch({\n      type: UNFOLLOW_ERROR,\n      payload: \"Sorry, there was a problem, we could not delete this following.\"\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}