{"ast":null,"code":"import { AUTH_USER_SUCCESS, AUTH_USER_PENDING, AUTH_USER_ERROR } from './actionTypes';\nimport firebase from '../../services/firebase'; // SIGNUP ACTION CREATOR\n\nexport const signup = (formData, callback) => async dispatch => {\n  try {\n    var email = formData.email,\n        username = formData.username,\n        password = formData.password;\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(res => {\n      fetch('http://localhost:8081/api/users/signup', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: username,\n          firebaseId: res.user.uid\n        })\n      }).then(res => res.json()).then(res => {\n        var user = firebase.auth().currentUser;\n        user.sendEmailVerification().then(function () {\n          // Display confirmation message to user\n          dispatch({\n            type: AUTH_USER_PENDING,\n            payload: \"Thank you, your account was created successfully! You need to first verify your email to access Twister. Go check your inbox, we just sent you an email to do so.\"\n          });\n          callback();\n        }).catch(function (error) {\n          // An error happened.\n          dispatch({\n            type: AUTH_USER_ERROR,\n            payload: \"Oops, something went wrong\"\n          });\n        });\n      }).catch(err => {\n        dispatch({\n          type: AUTH_USER_ERROR,\n          payload: \"Sorry, there was an error with your request. Please try again\"\n        });\n      });\n    }).catch(err => {\n      dispatch({\n        type: AUTH_USER_ERROR,\n        payload: \"Sorry, we could not create your account. Please try again.\"\n      });\n    });\n  } catch (err) {}\n}; // SIGNIN ACTION CREATOR\n\nexport const signin = (formData, callback) => async dispatch => {\n  try {\n    var email = formData.email,\n        password = formData.password;\n    firebase.auth().signInWithEmailAndPassword(email, password).then(res => {\n      if (res.user) {\n        // Signin in successful\n        dispatch({\n          type: AUTH_USER_SUCCESS,\n          payload: res.user.uid\n        }); // Saving user firebase ID in localStorage to maintain auth\n\n        localStorage.setItem('userId', res.user.uid); // Adding callback to redirect user to Main component\n\n        callback();\n      } else {\n        // An error occured\n        dispatch({\n          type: AUTH_USER_ERROR,\n          payload: \"Oops, we could not sign you in. Check your credentials.\"\n        });\n      }\n    }).catch(function (error) {\n      // An error occured\n      dispatch({\n        type: AUTH_USER_ERROR,\n        payload: \"Oops, we could not sign you in. Check your credentials.\"\n      });\n    });\n  } catch (err) {\n    // An error occured\n    dispatch({\n      type: AUTH_USER_ERROR,\n      payload: \"Oops, something went wrong :(\"\n    });\n  }\n}; // SIGNOUT ACTION CREATOR\n\nexport const signout = () => {\n  localStorage.removeItem('userId');\n  return {\n    type: AUTH_USER_SUCCESS,\n    payload: \"\"\n  };\n};","map":{"version":3,"sources":["/Users/victorarminjon/twister-frontend/src/redux/actions/auth.js"],"names":["AUTH_USER_SUCCESS","AUTH_USER_PENDING","AUTH_USER_ERROR","firebase","signup","formData","callback","dispatch","email","username","password","auth","createUserWithEmailAndPassword","then","res","fetch","method","headers","body","JSON","stringify","firebaseId","user","uid","json","currentUser","sendEmailVerification","type","payload","catch","error","err","signin","signInWithEmailAndPassword","localStorage","setItem","signout","removeItem"],"mappings":"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","sourcesContent":["import { AUTH_USER_SUCCESS, AUTH_USER_PENDING, AUTH_USER_ERROR } from './actionTypes';\nimport firebase from '../../services/firebase';\n\n\n// SIGNUP ACTION CREATOR\nexport const signup = (formData, callback) => (\n  async dispatch => {\n    try {\n      var { email, username, password } = formData;\n      firebase.auth().createUserWithEmailAndPassword(email, password)\n        .then(res => {\n          fetch('http://localhost:8081/api/users/signup', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              username: username,\n              firebaseId: res.user.uid\n            })\n          })\n          .then(res => res.json())\n          .then(res => {\n            var user = firebase.auth().currentUser;\n            user.sendEmailVerification().then(function() {\n              // Display confirmation message to user\n              dispatch({\n                type: AUTH_USER_PENDING,\n                payload: \"Thank you, your account was created successfully! You need to first verify your email to access Twister. Go check your inbox, we just sent you an email to do so.\"\n              });\n              callback();\n            }).catch(function(error) {\n              // An error happened.\n              dispatch({\n                type: AUTH_USER_ERROR,\n                payload: \"Oops, something went wrong\"\n              });\n            });\n          })\n          .catch(err => {\n            dispatch({\n              type: AUTH_USER_ERROR,\n              payload: \"Sorry, there was an error with your request. Please try again\"\n            });\n          })\n        })\n        .catch(err => {\n          dispatch({\n            type: AUTH_USER_ERROR,\n            payload: \"Sorry, we could not create your account. Please try again.\"\n          });\n        })\n    } catch(err) {\n\n    }\n  }\n);\n\n// SIGNIN ACTION CREATOR\nexport const signin = (formData, callback) => (\n  async (dispatch) => {\n    try {\n      var { email, password } = formData;\n      firebase.auth().signInWithEmailAndPassword(email, password)\n      .then(res => {\n        if(res.user) {\n          // Signin in successful\n          dispatch({\n            type: AUTH_USER_SUCCESS,\n            payload: res.user.uid\n          });\n\n          // Saving user firebase ID in localStorage to maintain auth\n          localStorage.setItem('userId', res.user.uid);\n\n          // Adding callback to redirect user to Main component\n          callback();\n        } else {\n          // An error occured\n          dispatch({\n            type: AUTH_USER_ERROR,\n            payload: \"Oops, we could not sign you in. Check your credentials.\"\n          });\n        }\n      })\n      .catch(function(error) {\n        // An error occured\n        dispatch({\n          type: AUTH_USER_ERROR,\n          payload: \"Oops, we could not sign you in. Check your credentials.\"\n        });\n      });\n    } catch(err) {\n      // An error occured\n      dispatch({\n        type: AUTH_USER_ERROR,\n        payload: \"Oops, something went wrong :(\"\n      });\n    }\n  }\n);\n\n// SIGNOUT ACTION CREATOR\nexport const signout = () => {\n  localStorage.removeItem('userId');\n  return {\n    type: AUTH_USER_SUCCESS,\n    payload: \"\"\n  };\n};\n"]},"metadata":{},"sourceType":"module"}